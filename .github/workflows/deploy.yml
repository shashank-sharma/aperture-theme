name: Build Example + Deploy to Pages, Publish Package

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  packages: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build_example:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build example (Vite)
        shell: bash
        run: |
          set -euo pipefail
          REPO_NAME="${GITHUB_REPOSITORY#*/}"
          if [[ "${REPO_NAME}" == *.github.io ]]; then
            BASE="/"
          else
            BASE="/${REPO_NAME}/"
          fi
          echo "Building with base=${BASE}"
          npm run build --silent -- --base "${BASE}"

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: examples/dist

  deploy:
    needs: build_example
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  publish_package:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (GitHub Packages)
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://npm.pkg.github.com'
          scope: '@shashank-sharma'

      - name: Install dependencies
        run: npm ci

      - name: Validate package can be packed
        run: npm pack

      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm publish --provenance --access public


